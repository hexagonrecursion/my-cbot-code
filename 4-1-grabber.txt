extern void object::WheeledGrabberBot() {
	WantBuilding(Converter);
	WantBuilding(BotFactory);
	WantBuilding(ResearchCenter);
	WantResearch(ResearchDefenseTower);
	WantBot(WingedShooter, "4-1-shooter.txt");
	WantBot(WingedGrabber, "4-1-winged-grabber.txt");
	WantBot(WingedBuilder, "4-1-winged-builder.txt");
	WantSufficientCharge();
	WantTitanium();
	WaitRadar(DefenseTower);
	WantSufficientCharge();
	WantTitanium();
}

void object::WantBuilding(int what) {
	if(radar(what) != null) {
		return;
		
	}
	WantSufficientCharge();
	
	goto(WantTitanium());
	grab();
	goto(flatspace(radar(SpaceShip).position, 5, 20, 100, 10));
	drop();
	goto(space());
	WaitRadar(what);
}

void WantResearch(int what)
{
	if(researched(what)){
		return;
	}
	WantSufficientCharge();
	
	goto(WantPowerCell());
	grab();
	goto(WaitRadar(ResearchCenter).position);
	drop();
	research(what);
	while(isbusy(radar(ResearchCenter))) {}
	grab();
	goto(space());
	drop();
}

void object::WantBot(int what, string program) {
	if(radar(what) != null) {
		return;
	}
	WantSufficientCharge();
	
	goto(WantTitanium());
	grab();
	goto(WaitRadar(BotFactory).position);
	drop();
	goto(space());
	factory(what, program);
	goto(WantPowerCell());
	grab();
	goto(WaitRadar(what).position);
	drop();
	goto(space());
}

void object::WantSufficientCharge() {
	if(energyCell.energyLevel > 0.3) {
		return;
	}
	goto(WantPowerCell());
	grab(EnergyCell);
	drop(Behind);
	grab();
	drop(EnergyCell);
}

point WantPowerCell() {
	object p[] = radarall(PowerCell);
	for(int i = 0; i < sizeof(p); ++i) {
		if(p[i].energyLevel == 1) {
			return p[i].position;
		}
	}
	message("No full power cells");
	object o;
	return o.position;  // should crash
}

point WantTitanium() {
	object titanium = radar(Titanium);
	if(titanium != null) {
		return titanium.position;
	}
	goto(radar(TitaniumOre).position);
	grab();
	goto(radar(Converter).position);
	drop();
	goto(space());
	return WaitRadar(Titanium).position;
}

object WaitRadar(int what) {
	object p;
	do {
		p = radar(what);
	} while (p == null);
	return p;
}